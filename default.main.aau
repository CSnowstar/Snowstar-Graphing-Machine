import win.ui;
import console
/*DSG{{*/
mainForm = win.form(text="aardio form";right=871;bottom=663)
mainForm.add(
btnGoCenter={cls="button";text="归中";left=304;top=520;right=586;bottom=602;font=LOGFONT(h=-24);z=7};
btnSet100L={cls="button";text="置100";left=560;top=56;right=656;bottom=88;font=LOGFONT(h=-24);tabstop=1;z=3};
btnSet100R={cls="button";text="置100";left=560;top=96;right=656;bottom=128;font=LOGFONT(h=-24);tabstop=1;z=6};
lblLineL={cls="static";text="LineL: ";left=160;top=56;right=272;bottom=96;font=LOGFONT(h=-24);transparent=1;z=1};
lblLineR={cls="static";text="LineR: ";left=160;top=88;right=272;bottom=128;font=LOGFONT(h=-24);transparent=1;z=4};
trbLineL={cls="trackbar";left=264;top=48;right=560;bottom=78;font=LOGFONT(h=-24);max=100;min=0;tabstop=1;z=2};
trbLineR={cls="trackbar";left=264;top=88;right=560;bottom=118;font=LOGFONT(h=-24);max=100;min=0;tabstop=1;z=5}
)
/*}}*/
console.open()
import sscyan.serial
Ssgm = class{
    ctor(d, k, rL, rR){
        this._d = d
        this._k = k
        this._rL = rL
        this._rR = rR
        this._se = assert(..sscyan.serial("COM3", 115200), "串口错误")
    }
    Action = class{
        ctor(revolutionsL=0, revolutionsR=0, pitchPen=0){
            this.revolutionsL = revolutionsL;
            this.revolutionsR = revolutionsR;
            this.pitchPen = pitchPen;
        }
        float revolutionsL;
        float revolutionsR;
        float pitchPen;
    }
    DeltaPps = function(deltaX, deltaY){
        GoPoint(this.ptX + deltaX, this.ptY + deltaY)
    }
    GoPoint = function(x, y){
        var lineL = ..math.sqrt((x - this._k / 2 - 0      ) ** 2 + (y - 0) ** 2)
        var lineR = ..math.sqrt((x - this._k / 2 - this._d) ** 2 + (y - 0) ** 2)
        return this.ChangeLineTo(lineL, lineR)
    }
    GoPointScaled = function(x, y){
        return this.GoPoint(x * this._d, y * this._d)
    }
    ChangeLineTo = function(lineL, lineR){
        var deltaLineL = lineL - this.lineL
        var deltaLineR = lineR - this.lineR
        
        this.lineL = lineL
        this.lineR = lineR
        return this.ChangeLine(deltaLineL, deltaLineR)
        
    }
    ChangeLine = function(deltaLineL, deltaLineR){
        var revolutionsL = ( deltaLineL / (2 * ..math.pi * this._rL))
        var revolutionsR = (-deltaLineR / (2 * ..math.pi * this._rR))
        return this.Revolve(revolutionsL, revolutionsR)
    }
    Revolve = function(revolutionsL, revolutionsR){
        return this.SendData(revolutionsL, revolutionsR, this.pitchPen)
    }
    ChangePitchPen = function(pitchPen){
        return this.SendData(this.revolutionsL, this.revolutionsR, pitchPen)
    }
    SendData = function(revolutionsL, revolutionsR, pitchPen){
        data = this.Action(revolutionsL, revolutionsR, pitchPen)
    	..console.dump(data)

        return this._se.write(data)
    }
    GoCenter = function(x, y){
        this.GoPoint(d/2, d/2)
    }
    State = function(){
        return
            this.lineL,
            this.lineR,
            this.ptX,
            this.ptY,
            this.pitchPen
    }
    lineL = 0;
    lineR = 0;
    ptX = 0;
    ptY = 0;
    pitchPen = 0;
}

//wt32 = sscyan.wintab32(mainForm)


d = 150
k = 35
rL = 14/2
rR = 14/2

ssgm = Ssgm(d, k, rL, rR)

// io.open()
// import sscyan.serial
// import sscyan.wintab32

// wt32 = sscyan.wintab32(mainForm)

// //
// mainForm.wndproc = {
// //    [0x7FF0/*_WT_PACKET*/] = function(hwnd,message,wParam,lParam){ 
// //        pkt = wt32.getPacket(wParam)
// //
// //        console.log(pkt.pkButtons       )
// //        console.log(pkt.pkX             )
// //        console.log(pkt.pkY             )
// //        console.log(pkt.pkZ             )
// //        console.log(pkt.pkNormalPressure)
// //    }
// }



mainForm.wndproc = {
    [0x202/*_WM_LBUTTONUP*/] = function(hwnd,message,wParam,lParam){ 
        var x,y = win.getMessagePos(lParam);
        
        var rct = mainForm.getClientRect()
        var w = rct.right - rct.left
        var h = rct.bottom - rct.top
        
        ssgm.pitchPen = 0.5
        ssgm.GoPointScaled(x / w, y / h)
        console.log(ssgm.State())
    }
}

mainForm.btnSet100R.oncommand = function(id,event){
    ssgm.lineR = 100;
}

mainForm.btnSet100L.oncommand = function(id,event){
    ssgm.lineL = 100;
}

mainForm.btnGoCenter.oncommand = function(id,event){
    ssgm.pitchPen = 0.5
    ssgm.GoCenter()
}

mainForm.trbLineR.oncommand = function(id,event,pos){
    ssgm.Revolve(0, (mainForm.trbLineR.pos /100-0.5))
    mainForm.trbLineR.pos = 50
}
    mainForm.trbLineR.pos = 50

mainForm.trbLineL.oncommand = function(id,event,pos){
    ssgm.Revolve((mainForm.trbLineL.pos / 100-0.5), 0)
    mainForm.trbLineL.pos = 50
}
    mainForm.trbLineL.pos = 50




mainForm.show() 
return win.loopMessage();
